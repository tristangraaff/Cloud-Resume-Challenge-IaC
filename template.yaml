AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  cloud-resume-challenge-iac

  Sample SAM Template for cloud-resume-challenge-iac

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

    Tracing: Active
    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    LoggingConfig:
      LogFormat: JSON
  Api:
    TracingEnabled: true

Resources:
  TristanTechOrgIacBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: tristantech.org-iac
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          BucketKeyEnabled: true
          - ServerSideEncryptionByDefault: 
              SSEAlgorithm: AES256
      #LoggingConfiguration: LoggingConfiguration
      #MetricsConfigurations: MetricsConfiguration
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      WebsiteConfiguration:
        IndexDocument: index.html

  TristanTechOrgIacBucketBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket:
        Ref: 'TristanTechOrgIacBucket'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource:
              Fn::Join:
                - ''
                - - 'arn:aws:s3:::'
                  - Ref: 'TristanTechOrgIacBucket'
                  - '/*'


  #HelloWorldFunction:
    #Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    #Properties:
      #CodeUri: hello-world/
      #Handler: app.lambdaHandler
      #Runtime: nodejs22.x
      #Architectures:
      #- x86_64
      #Events:
        #HelloWorld:
          #Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          #Properties:
            #Path: /hello
            #Method: get

  #ApplicationResourceGroup:
    #Type: AWS::ResourceGroups::Group
    #Properties:
      #Name:
        #Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      #ResourceQuery:
        #Type: CLOUDFORMATION_STACK_1_0
  #ApplicationInsightsMonitoring:
    #Type: AWS::ApplicationInsights::Application
    #Properties:
      #ResourceGroupName:
        #Ref: ApplicationResourceGroup
      #AutoConfigurationEnabled: 'true'

#Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  #HelloWorldApi:
    #Description: API Gateway endpoint URL for Prod stage for Hello World function
    #Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  #HelloWorldFunction:
    #Description: Hello World Lambda Function ARN
    #Value: !GetAtt HelloWorldFunction.Arn
  #HelloWorldFunctionIamRole:
    #Description: Implicit IAM Role created for Hello World function
    #Value: !GetAtt HelloWorldFunctionRole.Arn
