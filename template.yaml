AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  cloud-resume-challenge-iac

  Sample SAM Template for cloud-resume-challenge-iac

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

    Tracing: Active
    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    LoggingConfig:
      LogFormat: JSON
  Api:
    TracingEnabled: true

#Parameters:
  #LambdaFunction00countNumberOfWebsiteVisitors00pXgkjCodeS3BucketkdDlK:
    #NoEcho: "true"
    #Type: "String"
    #Description: "An Amazon S3 bucket in the same AWS-Region as your function. The\
      #\ bucket can be in a different AWS-account."
  #LambdaFunction00countNumberOfWebsiteVisitors00pXgkjCodeImageUrit188N:
    #NoEcho: "true"
    #Type: "String"
    #Description: "URI of a [container image](https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html)\
      #\ in the Amazon ECR registry."
  #LambdaFunction00countNumberOfWebsiteVisitors00pXgkjCodeSourceKMSKeyArn4C0qI:
    #NoEcho: "true"
    #Type: "String"
    #Description: "The ARN of the KMSlong (KMS) customer managed key that's used to\
      #\ encrypt your function's .zip deployment package. If you don't provide a customer\
      #\ managed key, Lambda uses an [owned key](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#aws-owned-cmk)."
  #LambdaFunction00countNumberOfWebsiteVisitors00pXgkjCodeS3KeyqnJ4m:
    #NoEcho: "true"
    #Type: "String"
    #Description: "The Amazon S3 key of the deployment package."
  #LambdaFunction00countNumberOfWebsiteVisitors00pXgkjCodeZipFilev4439:
    #NoEcho: "true"
    #Type: "String"
    #Description: "(Node.js and Python) The source code of your Lambda function. If\
      #\ you include your function source inline with this parameter, CFN places it\
      #\ in a file named ``index`` and zips it to create a [deployment package](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html).\
      #\ This zip file cannot exceed 4MB. For the ``Handler`` property, the first part\
      #\ of the handler identifier must be ``index``. For example, ``index.handler``.\n\
      #\  When you specify source code inline for a Node.js function, the ``index``\
      #\ file that CFN creates uses the extension ``.js``. This means that LAM treats\
      #\ the file as a CommonJS module. ES modules aren't supported for inline functions.\n\
      #\   For JSON, you must escape quotes and special characters such as newline\
      #\ (``\\n``) with a backslash.\n If you specify a function that interacts with\
      #\ an AWS CloudFormation custom resource, you don't have to write your own functions\
      #\ to send responses to the custom resource that invoked the function. AWS CloudFormation\
      #\ provides a response module ([cfn-response](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-lambda-function-code-cfnresponsemodule.html))\
      #\ that simplifies sending responses. See [Using Lambda with CloudFormation](https://docs.aws.amazon.com/lambda/latest/dg/services-cloudformation.html)\
      #\ for details."
  #LambdaFunction00countNumberOfWebsiteVisitors00pXgkjCodeS3ObjectVersionMERgx:
    #NoEcho: "true"
    #Type: "String"
    #Description: "For versioned objects, the version of the deployment package object\
      #\ to use."

Resources:
  FrontEndBucketPolicy:
    UpdateReplacePolicy: Delete
    Type: AWS::S3::BucketPolicy
    DeletionPolicy: Delete
    Properties:
      Bucket: !Ref FrontEndBucket
      PolicyDocument:
        Version: '2008-10-17'
        Statement:
          - Condition:
              StringEquals:
                AWS:SourceArn: 
                  Fn::Join:
                   - ''
                   - - 'arn:aws:cloudfront::'
                     - !Ref 'AWS::AccountId'
                     - ':distribution/'
                     - !Ref CloudFrontDistribution
            Resource: arn:aws:s3:::tristantech.org-iac/*
            Action: s3:GetObject
            Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Sid: AllowCloudFrontServicePrincipal
        Id: PolicyForCloudFrontPrivateContent

  FrontEndBucket:
    UpdateReplacePolicy: Delete
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      PublicAccessBlockConfiguration:
        RestrictPublicBuckets: false
        IgnorePublicAcls: false
        BlockPublicPolicy: false
        BlockPublicAcls: false
      BucketName: tristantech.org-iac
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - BucketKeyEnabled: true
            ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      #WebsiteConfiguration:
        #IndexDocument: index.html 
      #LoggingConfiguration:
        #TargetObjectKeyFormat:
          #PartitionedPrefix:
            #PartitionDateSource: EventTime
        #DestinationBucketName: logs.tristantech.org
        #LogFilePrefix: logs/

  LambdaBucket:
    UpdateReplacePolicy: Delete
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      PublicAccessBlockConfiguration:
        RestrictPublicBuckets: false
        IgnorePublicAcls: false
        BlockPublicPolicy: false
        BlockPublicAcls: false
      BucketName: tristantech.org-iac-lambda
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - BucketKeyEnabled: true
            ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  CloudFrontCachePolicy:
    UpdateReplacePolicy: "Delete"
    Type: "AWS::CloudFront::CachePolicy"
    DeletionPolicy: "Delete"
    Properties:
      CachePolicyConfig:
        Comment: "Policy with caching enabled. Supports Gzip and Brotli compression."
        MinTTL: 1
        MaxTTL: 3.1536E7
        ParametersInCacheKeyAndForwardedToOrigin:
          QueryStringsConfig:
            QueryStringBehavior: "none"
          EnableAcceptEncodingBrotli: true
          HeadersConfig:
            HeaderBehavior: "none"
          CookiesConfig:
            CookieBehavior: "none"
          EnableAcceptEncodingGzip: true
        DefaultTTL: 86400
        Name: "Custom-CachingOptimized"

  CloudFrontDistribution:
    UpdateReplacePolicy: "Delete"
    Type: "AWS::CloudFront::Distribution"
    DeletionPolicy: "Delete"
    Properties:
      DistributionConfig:
        Logging:
          IncludeCookies: false
          Bucket: ""
          Prefix: ""
        Comment: ""
        DefaultRootObject: "index.html"
        Origins:
        - ConnectionTimeout: 10
          OriginAccessControlId:
            Ref: "CloudFrontOriginAccessControl"
          ConnectionAttempts: 3
          OriginCustomHeaders: []
          DomainName:
            Fn::GetAtt:
            - "FrontEndBucket"
            - "RegionalDomainName"
          OriginShield:
            Enabled: false
          S3OriginConfig:
            OriginAccessIdentity: ""
          OriginPath: ""
          Id: "tristantech.org-iac"
        ViewerCertificate:
          MinimumProtocolVersion: "TLSv1.2_2021"
          SslSupportMethod: "sni-only"
          AcmCertificateArn: "arn:aws:acm:us-east-1:912311480070:certificate/80bf7507-ed8a-4de8-b7eb-56ef0c286e42"
        PriceClass: "PriceClass_100"
        DefaultCacheBehavior:
          Compress: true
          FunctionAssociations: []
          LambdaFunctionAssociations: []
          TargetOriginId: "tristantech.org-iac"
          ViewerProtocolPolicy: "redirect-to-https"
          GrpcConfig:
            Enabled: false
          TrustedSigners: []
          FieldLevelEncryptionId: ""
          TrustedKeyGroups: []
          AllowedMethods:
          - "HEAD"
          - "GET"
          CachedMethods:
          - "HEAD"
          - "GET"
          SmoothStreaming: false
          CachePolicyId:
            Ref: "CloudFrontCachePolicy"
        Staging: false
        CustomErrorResponses:
        - ErrorCachingMinTTL: 10
          ResponseCode: 403
          ErrorCode: 403
          ResponsePagePath: "/error-pages/403.html"
        - ErrorCachingMinTTL: 10
          ResponseCode: 404
          ErrorCode: 404
          ResponsePagePath: "/error-pages/404.html"
        ContinuousDeploymentPolicyId: ""
        OriginGroups:
          Quantity: 0
          Items: []
        Enabled: true
        Aliases:
        - "tristantech.org"
        - "www.tristantech.org"
        IPV6Enabled: true
        WebACLId: "arn:aws:wafv2:us-east-1:912311480070:global/webacl/CreatedByCloudFront-891b1432-5997-49e0-855f-bb709f051c9d/25a6a306-4657-4b01-8950-fe03f500012a"
        HttpVersion: "http2"
        Restrictions:
          GeoRestriction:
            Locations: []
            RestrictionType: "none"
        CacheBehaviors: []

  CloudFrontOriginAccessControl:
    UpdateReplacePolicy: "Delete"
    Type: "AWS::CloudFront::OriginAccessControl"
    DeletionPolicy: "Delete"
    Properties:
      OriginAccessControlConfig:
        SigningBehavior: "always"
        Description: ""
        SigningProtocol: "sigv4"
        OriginAccessControlOriginType: "s3"
        Name: "${FrontEndBucket}.s3.eu-central-1.amazonaws.com"
    
  myDNS:
    Type: 'AWS::Route53::RecordSetGroup'
    Properties:
      HostedZoneId: Z00273233K0LGAJK7OZOH
      RecordSets:
        - Name: tristantech.org
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt 
              - CloudFrontDistribution
              - DomainName
        - Name: www.tristantech.org
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt 
            - CloudFrontDistribution
            - DomainName

  DynamoDBTable:
    UpdateReplacePolicy: "Delete"
    Type: "AWS::DynamoDB::Table"
    DeletionPolicy: "Delete"
    Properties:
      SSESpecification:
        SSEEnabled: false
      TableName: "website-visits-iac"
      AttributeDefinitions:
      - AttributeType: "S"
        AttributeName: "count_id"
      ContributorInsightsSpecification:
        Enabled: false
      BillingMode: "PAY_PER_REQUEST"
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
        RecoveryPeriodInDays: 35
      WarmThroughput:
        ReadUnitsPerSecond: 12000
        WriteUnitsPerSecond: 4000
      KeySchema:
      - KeyType: "HASH"
        AttributeName: "count_id"
      DeletionProtectionEnabled: false
      TableClass: "STANDARD"
      Tags: []
      TimeToLiveSpecification:
        Enabled: false

  MyLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: countNumberOfWebsiteVisits
      Handler: countNumberOfWebsiteVisits.handler
      Runtime: nodejs22.x
      Role: arn:aws:iam::123456789012:role/MyLambdaExecutionRole
      Code: ./lambda/
      #Events:
        #HelloWorld:
          #Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          #Properties:
            #Path: /hello
            #Method: get


  #LambdaPermission00functioncountNumberOfWebsiteVisitors00iOBYK:
    #UpdateReplacePolicy: "Delete"
    #Type: "AWS::Lambda::Permission"
    #DeletionPolicy: "Delete"
    #Properties:
      #FunctionName:
        #Fn::GetAtt:
        #- "LambdaFunction00countNumberOfWebsiteVisitors00pXgkj"
        #- "Arn"
      #Action: "lambda:InvokeFunction"
      #SourceArn: "arn:aws:execute-api:eu-central-1:912311480070:y0218osvh0/*/POST/"
      #Principal: "apigateway.amazonaws.com"
  #LambdaPermission00functioncountNumberOfWebsiteVisitors00Zkgky:
    #UpdateReplacePolicy: "Delete"
    #Type: "AWS::Lambda::Permission"
    #DeletionPolicy: "Delete"
    #Properties:
      #FunctionName:
        #Fn::GetAtt:
        #- "LambdaFunction00countNumberOfWebsiteVisitors00pXgkj"
        #- "Arn"
      #Action: "lambda:InvokeFunction"
      #SourceArn: "arn:aws:execute-api:eu-central-1:912311480070:tkarxrzkl1/*/GET/visitor-count"
      #Principal: "apigateway.amazonaws.com"

  #IAMRole00countNumberOfWebsiteVisitorsrolen9d4noft00U4FRv:
    #UpdateReplacePolicy: "Delete"
    #Type: "AWS::IAM::Role"
    #DeletionPolicy: "Delete"
    #Properties:
      #Path: "/service-role/"
      #ManagedPolicyArns:
      #- "arn:aws:iam::912311480070:policy/service-role/AWSLambdaBasicExecutionRole-9cbce26f-d618-453b-8571-18687de80142"
      #MaxSessionDuration: 3600
      #RoleName: "countNumberOfWebsiteVisitors-role-n9d4noft"
      #Policies:
      #- PolicyDocument:
          #Version: "2012-10-17"
          #Statement:
          #- Resource: "arn:aws:dynamodb:eu-central-1:912311480070:table/website-visits"
            #Action: "dynamodb:GetItem"
            #Effect: "Allow"
            #Sid: "AllowGetItemCommand"
        #PolicyName: "AllowGetItemCommand"
      #- PolicyDocument:
          #Version: "2012-10-17"
          #Statement:
          #- Resource: "arn:aws:dynamodb:eu-central-1:912311480070:table/website-visits"
            #Action: "dynamodb:UpdateItem"
            #Effect: "Allow"
            #Sid: "AllowUpdateItemCommand"
        #PolicyName: "AllowUpdateItemCommand"
      #AssumeRolePolicyDocument:
        #Version: "2012-10-17"
        #Statement:
        #- Action: "sts:AssumeRole"
          #Effect: "Allow"
          #Principal:
            #Service: "lambda.amazonaws.com"
  #LambdaPermission00functioncountNumberOfWebsiteVisitors00A9ciX:
    #UpdateReplacePolicy: "Delete"
    #Type: "AWS::Lambda::Permission"
    #DeletionPolicy: "Delete"
    #Properties:
      #FunctionName:
        #Fn::GetAtt:
        #- "LambdaFunction00countNumberOfWebsiteVisitors00pXgkj"
        #- "Arn"
      #Action: "lambda:InvokeFunction"
      #SourceArn: "arn:aws:execute-api:eu-central-1:912311480070:y0218osvh0/*/GET/"
      #Principal: "apigateway.amazonaws.com"

  #IAMManagedPolicy00policyserviceroleAWSLambdaBasicExecutionRole9cbce26fd618453b857118687de80142008RnPu:
    #UpdateReplacePolicy: "Delete"
    #Type: "AWS::IAM::ManagedPolicy"
    #DeletionPolicy: "Delete"
    #Properties:
      #ManagedPolicyName: "AWSLambdaBasicExecutionRole-9cbce26f-d618-453b-8571-18687de80142"
      #Path: "/service-role/"
      #Description: ""
      #Groups: []
      #PolicyDocument:
        #Version: "2012-10-17"
        #Statement:
        #- Resource: "arn:aws:logs:eu-central-1:912311480070:*"
          #Action: "logs:CreateLogGroup"
          #Effect: "Allow"
        #- Resource:
          #- "arn:aws:logs:eu-central-1:912311480070:log-group:/aws/lambda/countNumberOfWebsiteVisitors:*"
          #Action:
          #- "logs:CreateLogStream"
          #- "logs:PutLogEvents"
          #Effect: "Allow"
      #Roles:
      #- Ref: "IAMRole00countNumberOfWebsiteVisitorsrolen9d4noft00U4FRv"
      #Users: []

  #LambdaFunction00countNumberOfWebsiteVisitors00pXgkj:
    #UpdateReplacePolicy: "Delete"
    #Type: "AWS::Lambda::Function"
    #DeletionPolicy: "Delete"
    #Properties:
      #MemorySize: 128
      #Description: ""
      #TracingConfig:
        #Mode: "PassThrough"
      #Timeout: 3
      #RuntimeManagementConfig:
        #UpdateRuntimeOn: "Auto"
      #Handler: "index.handler"
      #Code:
        #SourceKMSKeyArn:
          #Ref: "LambdaFunction00countNumberOfWebsiteVisitors00pXgkjCodeSourceKMSKeyArn4C0qI"
        #S3ObjectVersion:
          #Ref: "LambdaFunction00countNumberOfWebsiteVisitors00pXgkjCodeS3ObjectVersionMERgx"
        #S3Bucket:
          #Ref: "LambdaFunction00countNumberOfWebsiteVisitors00pXgkjCodeS3BucketkdDlK"
        #ZipFile:
          #Ref: "LambdaFunction00countNumberOfWebsiteVisitors00pXgkjCodeZipFilev4439"
        #ImageUri:
          #Ref: "LambdaFunction00countNumberOfWebsiteVisitors00pXgkjCodeImageUrit188N"
        #S3Key:
          #Ref: "LambdaFunction00countNumberOfWebsiteVisitors00pXgkjCodeS3KeyqnJ4m"
      #Role:
        #Fn::GetAtt:
        #- "IAMRole00countNumberOfWebsiteVisitorsrolen9d4noft00U4FRv"
        #- "Arn"
      #FileSystemConfigs: []
      #FunctionName: "countNumberOfWebsiteVisitors"
      #Runtime: "nodejs22.x"
      #PackageType: "Zip"
      #LoggingConfig:
        #LogFormat: "Text"
        #LogGroup: "/aws/lambda/countNumberOfWebsiteVisitors"
      #RecursiveLoop: "Terminate"
      #EphemeralStorage:
        #Size: 512
      #Architectures:
      #- "x86_64"
  #LambdaPermission00functioncountNumberOfWebsiteVisitors00xu0JA:
    #UpdateReplacePolicy: "Delete"
    #Type: "AWS::Lambda::Permission"
    #DeletionPolicy: "Delete"
    #Properties:
      #FunctionName:
        #Fn::GetAtt:
        #- "LambdaFunction00countNumberOfWebsiteVisitors00pXgkj"
        #- "Arn"
      #Action: "lambda:InvokeFunction"
      #SourceArn: "arn:aws:execute-api:eu-central-1:912311480070:tkarxrzkl1/*/POST/visitor-count"
      #Principal: "apigateway.amazonaws.com"      

#Resources:
  #FrontEndBucket:
    #Type: 'AWS::S3::Bucket'
    #Properties:
      #BucketName: tristantech.org-iac
      #PublicAccessBlockConfiguration:
        #BlockPublicAcls: false
        #BlockPublicPolicy: false
        #IgnorePublicAcls: false
        #RestrictPublicBuckets: false
      #WebsiteConfiguration:
        #IndexDocument: index.html
        
  #FrontEndBucketPolicy:
    #UpdateReplacePolicy: Delete
    #Type: 'AWS::S3::BucketPolicy'
    #DeletionPolicy: Delete
    #Properties:
      #Bucket: !Ref FrontEndBucket
      #PolicyDocument:
        #Version: '2012-10-17'
        #Statement:
          #- Sid: PublicReadForGetBucketObjects
            #Effect: Allow
            #Principal: '*'
            #Action: 's3:GetObject'
            #Resource:
              #Fn::Join:
                #- ''
                #- - 'arn:aws:s3:::'
                  #- Ref: 'FrontEndBucket'
                  #- '/*'
  #
  #HelloWorldFunction:
    #Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    #Properties:
      #CodeUri: hello-world/
      #Handler: app.lambdaHandler
      #Runtime: nodejs22.x
      #Architectures:
      #- x86_64
      #Events:
        #HelloWorld:
          #Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          #Properties:
            #Path: /hello
            #Method: get

  #ApplicationResourceGroup:
    #Type: AWS::ResourceGroups::Group
    #Properties:
      #Name:
        #Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      #ResourceQuery:
        #Type: CLOUDFORMATION_STACK_1_0
  #ApplicationInsightsMonitoring:
    #Type: AWS::ApplicationInsights::Application
    #Properties:
      #ResourceGroupName:
        #Ref: ApplicationResourceGroup
      #AutoConfigurationEnabled: 'true'

#Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  #HelloWorldApi:
    #Description: API Gateway endpoint URL for Prod stage for Hello World function
    #Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  #HelloWorldFunction:
    #Description: Hello World Lambda Function ARN
    #Value: !GetAtt HelloWorldFunction.Arn
  #HelloWorldFunctionIamRole:
    #Description: Implicit IAM Role created for Hello World function
    #Value: !GetAtt HelloWorldFunctionRole.Arn
